
globals:
  javascript: |
    // retrieves the hostname from the specified server
    function getHostname(server){
      return server == 'LOCAL' ? 'localhost' : server.split('@').pop()
    }

scripts:
  install-sdkman: #https://sdkman.io/install
  - sh:
      command: sdk help
      prompt:
        "Would you like to upgrade now? (Y/n): ": "Y"
  - regex: ".*command not found"
    then:
    - sh: curl -s "https://get.sdkman.io" | bash
      then:
      - regex: "Enjoy"
        else:
        - abort: failed to install SDKMAN
    - sh: source "$HOME/.sdkman/bin/sdkman-init.sh"
  - sh:
      command: sdk version
      prompt:
        "Would you like to upgrade now? (Y/n): ": "Y"
      # SDKMAN 5.9.1+575
    then:
    - regex: "SDKMAN (?<RUN.sdk_version>[\\d\\.\\+]+)"

  select-java:
    - script: install-sdkman
    - sh: sdk install java ${{JAVA_VERSION:21.0.7-tem}}
    # mainly for debugging purposes
    - sh: java -version
  
  select-jbang:
    - script: install-sdkman
    - sh: sdk install jbang ${{JBANG_VERSION:0.126.0}}
    # mainly for debugging purposes
    - sh: jbang --version

  extract-pid-from-container:
    # CONTAINER_POD_ID: the id of the running container
    # STATE_PID: the state where the pid should be saved to
    - sh: ${{CONTAINER_RUNTIME}} inspect --format='{{.State.Pid}}' ${{CONTAINER_POD_ID}}
    - regex: (^[1-9][0-9]*$)
      then:
        - set-state: ${{STATE_PID}}